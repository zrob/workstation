#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset
[[ "${TRACE:-}" ]] && set -o xtrace

__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
__filename="$(basename "${BASH_SOURCE[0]}")"
__root_dir="$(cd "$(dirname "${__dir}")" && pwd)"

pull_behavior=true
cd_behavior=false
show_config_behavior=false
focus_list=""
skip_list=""

print_usage() {
cat << EOF
${__filename} -- workstation management

Pull latest changes and install.

Usage: ${__filename} [options]

Options:
  -l    Install local state without pulling first
  -f    List of setups to focus
  -s    List of setups to skip
  -c    Display 'cd' to the workstation directory
  -a    Display available setups
  -h    Display this help message
EOF
}

cd_helper() {
    echo -n "cd ${__root_dir}" | pbcopy
    
    echo "cd ${__root_dir}"
    echo
    echo "cmd+v. filled the command into your paste buffer."
}

show_configs() {
    source "${__root_dir}/install.sh"
    print_available_setups
}

git_pull() {
    git pull
    echo
}

main() {
    cd "$__root_dir"

    if [[ "$cd_behavior" = true ]]; then
        cd_helper
        exit 0
    fi

    if [[ "$show_config_behavior" = true ]]; then
        if [[ "$pull_behavior" = true ]]; then
            git_pull || true
        fi

        show_configs
        exit 0
    fi

    if [[ "$pull_behavior" = true ]]; then
        git_pull
    fi

    WORKSTATION_FOCUS="$focus_list" WORKSTATION_SKIP="$skip_list" ./install.sh
}

while getopts "hlcf:s:a" opt; do
case "${opt}" in
    "h")
        print_usage
        exit 0
        ;;
    "l")
        pull_behavior=false
        ;;
    "c")
        cd_behavior=true
        ;;
    "a")
        show_config_behavior=true
        ;;
    "f")
        focus_list="$OPTARG"
        set +o nounset
        until [[ $(eval "echo \${$OPTIND}") =~ ^-.* ]] || [ -z $(eval "echo \${$OPTIND}") ]; do
            focus_list+=" $(eval "echo \${$OPTIND}")"
            OPTIND=$((OPTIND + 1))
        done
        set -o nounset
        ;;
    "s")
        skip_list="$OPTARG"
        set +o nounset
        until [[ $(eval "echo \${$OPTIND}") =~ ^-.* ]] || [ -z $(eval "echo \${$OPTIND}") ]; do
            skip_list+=" $(eval "echo \${$OPTIND}")"
            OPTIND=$((OPTIND + 1))
        done
        set -o nounset
        ;;
    "?")
        print_usage
        exit 1
        ;;
esac
done
shift $((OPTIND - 1))

main
