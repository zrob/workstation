{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"resizable","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.espn.com/nfl/recap?gameId=401437784"],"orig_noframes":null,"orig_run_at":"context-menu","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null,"run_in":null,"tags":[]},"storage":{"ts":1712102384882,"data":{}},"enabled":true,"position":1,"uuid":"bdfd76c7-157a-4159-a7ff-dbe97076b0c3","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICByZXNpemFibGUKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjEKLy8gQGRlc2NyaXB0aW9uICB0cnkgdG8gdGFrZSBvdmVyIHRoZSB3b3JsZCEKLy8gQGF1dGhvciAgICAgICBZb3UKLy8gQG1hdGNoICAgICAgICBodHRwczovL3d3dy5lc3BuLmNvbS9uZmwvcmVjYXA/Z2FtZUlkPTQwMTQzNzc4NAovLyBAaWNvbiAgICAgICAgIGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vczIvZmF2aWNvbnM/c3o9NjQmZG9tYWluPWVzcG4uY29tCi8vIEBncmFudCAgICAgICAgbm9uZQovLyBAcnVuLWF0ICAgICAgIGNvbnRleHQtbWVudQovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKCiAgICBjb25zdCBkaXZzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnZGl2Jyk7CiAgICBkaXZzLmZvckVhY2goKGFEaXYpID0+IHsKICAgICAgICBhRGl2LnN0eWxlLmNzc1RleHQgKz0gJ3Jlc2l6ZTpib3RoO292ZXJmbG93OmF1dG87Ym9yZGVyOjFweCBzb2xpZCBvcmFuZ2U7JzsKICAgIH0pOwp9KSgpOw=="},{"name":"hbomax autofill","options":{"check_for_updates":false,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://auth.max.com/login*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":1702930061388,"run_in":null,"tags":[]},"storage":{"ts":1712102384884,"data":{}},"enabled":true,"position":2,"uuid":"0f67a15e-83e4-4319-bec8-86aed4f88370","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBoYm9tYXggYXV0b2ZpbGwKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjEKLy8gQGRlc2NyaXB0aW9uICBlbmFibGUgYXV0b2ZpbGwgZm9yIGhib21heCBsb2dpbiBmaWVsZHMKLy8gQGF1dGhvciAgICAgICB6cm9iCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9hdXRoLm1heC5jb20vbG9naW4qCi8vIEBpY29uICAgICAgICAgaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbS9zMi9mYXZpY29ucz9zej02NCZkb21haW49bWF4LmNvbQovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gQHJ1bi1hdCAgICAgICBkb2N1bWVudC1zdGFydAovLyA9PS9Vc2VyU2NyaXB0PT0KCi8qCiogQXV0b2ZpbGwgcGFzc3dvcmQgd2l0aCBpbnB1dCBib3ggaW5qZWN0aW9uIHRyaWNrLiBXaHkgZG9lcyB0aGF0IHdvcms/PwoqCiogQXV0b2ZpbGwgdXNlcm5hbWUgYnkgY2hhbmdpbmcgYXV0b2NvbXBsZXRlIGF0dHJpYnV0ZSBvbiB1c2VybmFtZSBpbnB1dC4KKi8KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKCiAgICAvLyBGb3Igc29tZSByZWFzb24gaW5qZWN0aW5nIGFuIGlucHV0IHR5cGUgb2YgcGFzc3dvcmQgdGV4dCBpbnB1dAogICAgLy8gaW50byB0aGUgcGFnZSBsZXQncyB0aGUgcmVhbCBwYXNzd29yZCBpbnB1dCBhdXRvZmlsbC4KICAgIHZhciBwYXNzd29yZGZpZWxkID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTsKICAgIHBhc3N3b3JkZmllbGQudHlwZSA9ICJwYXNzd29yZCI7CiAgICBwYXNzd29yZGZpZWxkLmF1dG9jb21wbGV0ZT0iY3VycmVudC1wYXNzd29yZCI7CiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHBhc3N3b3JkZmllbGQpOwoKICAgIC8qKgogICAgKiBGaW5kcyBhbGwgZWxlbWVudHMgaW4gdGhlIGVudGlyZSBwYWdlIG1hdGNoaW5nIGBzZWxlY3RvcmAsIGV2ZW4gaWYgdGhleSBhcmUgaW4gc2hhZG93Um9vdHMuCiAgICAqIEp1c3QgbGlrZSBgcXVlcnlTZWxlY3RvckFsbGAsIGJ1dCBhdXRvbWF0aWNhbGx5IGV4cGFuZCBvbiBhbGwgY2hpbGQgYHNoYWRvd1Jvb3RgIGVsZW1lbnRzLgogICAgKiBAc2VlIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vYS83MTY5MjU1NS8yMjI4NzcxCiAgICAqLwogICAgZnVuY3Rpb24gcXVlcnlTZWxlY3RvckFsbFNoYWRvd3Moc2VsZWN0b3IsIGVsID0gZG9jdW1lbnQuYm9keSkgewogICAgICAgIC8vIHJlY3Vyc2Ugb24gY2hpbGRTaGFkb3dzCiAgICAgICAgY29uc3QgY2hpbGRTaGFkb3dzID0gQXJyYXkuZnJvbShlbC5xdWVyeVNlbGVjdG9yQWxsKCcqJykpLgogICAgICAgIG1hcChlbCA9PiBlbC5zaGFkb3dSb290KS5maWx0ZXIoQm9vbGVhbik7CgogICAgICAgIGNvbnN0IGNoaWxkUmVzdWx0cyA9IGNoaWxkU2hhZG93cy5tYXAoY2hpbGQgPT4gcXVlcnlTZWxlY3RvckFsbFNoYWRvd3Moc2VsZWN0b3IsIGNoaWxkKSk7CgogICAgICAgIC8vIGZ1c2UgYWxsIHJlc3VsdHMgaW50byBzaW5ndWxhciwgZmxhdCBhcnJheQogICAgICAgIGNvbnN0IHJlc3VsdCA9IEFycmF5LmZyb20oZWwucXVlcnlTZWxlY3RvckFsbChzZWxlY3RvcikpOwogICAgICAgIHJldHVybiByZXN1bHQuY29uY2F0KGNoaWxkUmVzdWx0cykuZmxhdCgpOwogICAgfQoKICAgIC8vIEEgZnVuY3Rpb24gdGhhdCB3YWl0cyBmb3IgYW4gZWxlbWVudCB0byBleGlzdCBpbiB0aGUgRE9NIGFuZCB0aGVuIGV4ZWN1dGVzIGEgY2FsbGJhY2sgZnVuY3Rpb24uCiAgICBmdW5jdGlvbiB3YWl0Rm9yRWxlbWVudChzZWxlY3RvciwgbWF4QXR0ZW1wdHMgPSAxMCwgY2FsbGJhY2spIHsKICAgICAgICBsZXQgYXR0ZW1wdHMgPSAwOwogICAgICAgIGNvbnN0IGludGVydmFsSWQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIC8vIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsKICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IHF1ZXJ5U2VsZWN0b3JBbGxTaGFkb3dzKHNlbGVjdG9yKVswXQoKICAgICAgICAgICAgaWYgKGVsZW1lbnQpIHsKICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxJZCk7CiAgICAgICAgICAgICAgICBjYWxsYmFjayhlbGVtZW50KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJhdHRlbXB0IGFnYWluIik7CiAgICAgICAgICAgICAgICBhdHRlbXB0cysrOwogICAgICAgICAgICAgICAgaWYgKGF0dGVtcHRzID49IG1heEF0dGVtcHRzKSB7CiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbElkKTsKICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ0VsZW1lbnQgJyArIHNlbGVjdG9yICsgJyBub3QgZm91bmQgYWZ0ZXIgJyArIG1heEF0dGVtcHRzICsgJyBhdHRlbXB0cycpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSwgNTAwKTsKICAgIH0KCiAgICB3YWl0Rm9yRWxlbWVudCgiaW5wdXRbaWQ9J2xvZ2luLXVzZXJuYW1lLWlucHV0J10iLDI1ICwgZnVuY3Rpb24gKGVsZW1lbnQpewogICAgICAgIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdhdXRvY29tcGxldGUnLCd1c2VybmFtZScpCiAgICB9KTsKCn0pKCk7"},{"name":"HTML5视频播放工具","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["https://user.qzone.qq.com/*"],"orig_includes":["*/play*","*play/*"],"orig_matches":["https://*.qq.com/*","https://www.weiyun.com/video_*","https://v.youku.com/v_play/*","https://v.youku.com/v_show/id_*","https://vku.youku.com/live/*","https://video.tudou.com/v/*","https://www.iqiyi.com/*","https://live.bilibili.com/*","https://www.bilibili.com/*","https://www.ixigua.com/*","https://www.toutiao.com/video/*","https://www.acfun.cn/*","https://live.acfun.cn/live/*","http://v.pptv.com/show/*","https://v.pptv.com/show/*","https://www.miguvideo.com/*","https://tv.sohu.com/*","https://film.sohu.com/album/*","https://www.mgtv.com/*","https://pan.baidu.com/*","https://yun.baidu.com/*","https://*.163.com/*","https://*.icourse163.org/*","http://video.sina.*/*","https://video.sina.*/*","http://k.sina.*/*","https://k.sina.*/*","https://weibo.com/*","https://*.weibo.com/*","https://pan.baidu.com/*","https://yun.baidu.com/*","http://v.ifeng.com/*","https://v.ifeng.com/*","http://news.mtime.com/*","http://video.mtime.com/*","https://www.youtube.com/*","https://www.ted.com/talks/*","https://www.twitch.tv/*","https://www.yy.com/*","https://www.huya.com/*","https://v.douyu.com/*","https://www.douyu.com/*","https://live.douyin.com/*","https://www.douyin.com/*","https://www.longzhu.com/*","https://www.zhanqi.tv/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":["/^[^:/#?]*:\\/\\/([^#?/]*\\.)?www\\.espn\\.com(:[0-9]{1,5})?\\/.*$/"],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":1712614130036,"run_in":null,"tags":[]},"storage":{"ts":1712102384896,"data":{"remberRate":"bfalse"}},"enabled":true,"position":3,"file_url":"https://update.greasyfork.org/scripts/30545/HTML5%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%B7%A5%E5%85%B7.user.js","uuid":"a7d8e7c9-c93b-4f5f-808a-8f178cea9fa3","source":"","requires":[{"meta":{"name":"vue.min.js","url":"https://cdn.staticfile.org/vue/2.6.11/vue.min.js","ts":1712102384889,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery.min.js","url":"https://cdn.staticfile.org/jquery/3.6.0/jquery.min.js","ts":1712102384892,"mimetype":"text/javascript"},"source":""}]},{"name":"Max Twitch Quality","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www.twitch.tv/*","https://player.twitch.tv/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":1712641878646,"run_in":null,"tags":[]},"storage":{"ts":1712102384885,"data":{}},"enabled":true,"position":4,"uuid":"2c507395-007b-4ae1-b37f-07618184e6bb","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICBNYXggVHdpdGNoIFF1YWxpdHkKLy8gQGRlc2NyaXB0aW9uICAgICBTZXQgcXVhbGl0eSB0byBtYXggYnkgcHVzaGluZyAncycKLy8gQHZlcnNpb24gICAgICAgICAwLjAuMQovLyBAYXV0aG9yICAgICAgICAgIHpyb2IKLy8gQGxpY2Vuc2UgICAgICAgICBNSVQKLy8gQG1hdGNoICAgICAgICAgICBodHRwczovL3d3dy50d2l0Y2gudHYvKgovLyBAbWF0Y2ggICAgICAgICAgIGh0dHBzOi8vcGxheWVyLnR3aXRjaC50di8qCi8vIEBncmFudCAgICAgICAgICAgbm9uZQovLyBAcnVuLWF0ICAgICAgICAgIGRvY3VtZW50LWVuZAovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbiAoKSB7CiAgICAndXNlIHN0cmljdCc7CgogICAgYXN5bmMgZnVuY3Rpb24gb25LZXlkb3duKGV2dCkgewogICAgICAgIC8vIFVzZSBodHRwczovL2tleWNvZGUuaW5mby8gdG8gZ2V0IGtleXMKICAgICAgICBpZiAoZXZ0LmtleUNvZGUgPT0gODMpIHsgLy8gcyBrZXkgPSA4MwogICAgICAgICAgICBzZXRRdWFsaXR5TWF4KCk7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKGV2dC5rZXlDb2RlID09IDY1KSB7IC8vIGEga2V5ID0gNjUKICAgICAgICAgICAgc2V0UXVhbGl0eVRvZ2dsZUZvckFkYmxvY2tGcmVlemVGaXgoKTsKICAgICAgICAgICAgYXdhaXQgbmV3IFByb21pc2UociA9PiBzZXRUaW1lb3V0KHIsIDEwMDApKTsKICAgICAgICAgICAgc2V0UXVhbGl0eU1heCgpOwogICAgICAgIH0KICAgIH0KICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBvbktleWRvd24sIHRydWUpOwoKICAgIC8vIEEgZnVuY3Rpb24gdGhhdCB3YWl0cyBmb3IgYW4gZWxlbWVudCB0byBleGlzdCBpbiB0aGUgRE9NIGFuZCB0aGVuIGV4ZWN1dGVzIGEgY2FsbGJhY2sgZnVuY3Rpb24uCiAgICBmdW5jdGlvbiB3YWl0Rm9yRWxlbWVudChzZWxlY3RvciwgbWF4QXR0ZW1wdHMgPSAxMCwgY2FsbGJhY2spIHsKICAgICAgICBsZXQgYXR0ZW1wdHMgPSAwOwogICAgICAgIGNvbnN0IGludGVydmFsSWQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTsKICAgICAgICAgICAgaWYgKGVsZW1lbnQpIHsKICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxJZCk7CiAgICAgICAgICAgICAgICBjYWxsYmFjayhlbGVtZW50KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGF0dGVtcHRzKys7CiAgICAgICAgICAgICAgICBpZiAoYXR0ZW1wdHMgPj0gbWF4QXR0ZW1wdHMpIHsKICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignRWxlbWVudCAnICsgc2VsZWN0b3IgKyAnIG5vdCBmb3VuZCBhZnRlciAnICsgbWF4QXR0ZW1wdHMgKyAnIGF0dGVtcHRzJyk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9LCA1MDApOwogICAgfQoKICAgIGZ1bmN0aW9uIHNldFF1YWxpdHlNYXgoKSB7CiAgICAgICAgbGV0IHNldHRpbmdzQnV0dG9uID0gbnVsbDsKICAgICAgICBsZXQgc2V0dGluZ3NNZW51QnV0dG9uID0gbnVsbDsKCiAgICAgICAgLy8gRW5zdXJlIHNldHRpbmdzIGlzIGNsb3NlZCB0byBzdGFydCBmcm9tIGtub3duIGdvb2QgcGxhY2UKICAgICAgICB3YWl0Rm9yRWxlbWVudCgnW2RhdGEtYS10YXJnZXQ9InBsYXllci1zZXR0aW5ncy1tZW51Il0nLCAxLCBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgICAgIC8vIENsaWNrIHRoZSBzZXR0aW5ncyBidXR0b24uCiAgICAgICAgICAgIHdhaXRGb3JFbGVtZW50KCdbZGF0YS1hLXRhcmdldD0icGxheWVyLXNldHRpbmdzLWJ1dHRvbiJdJywgMjUsIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICAgICAgICBzZXR0aW5nc0J1dHRvbiA9IGVsZW1lbnQ7CiAgICAgICAgICAgICAgICBzZXR0aW5nc0J1dHRvbi5jbGljaygpOwogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKCiAgICAgICAgLy8gQ2xpY2sgdGhlIHNldHRpbmdzIGJ1dHRvbi4KICAgICAgICB3YWl0Rm9yRWxlbWVudCgnW2RhdGEtYS10YXJnZXQ9InBsYXllci1zZXR0aW5ncy1idXR0b24iXScsIDI1LCBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgICAgICBzZXR0aW5nc0J1dHRvbiA9IGVsZW1lbnQ7CiAgICAgICAgICAgIHNldHRpbmdzQnV0dG9uLmNsaWNrKCk7CiAgICAgICAgfSk7CgogICAgICAgIC8vIENsaWNrIHRoZSBxdWFsaXR5IHNldHRpbmdzIGJ1dHRvbi4KICAgICAgICB3YWl0Rm9yRWxlbWVudCgnW2RhdGEtYS10YXJnZXQ9InBsYXllci1zZXR0aW5ncy1tZW51LWl0ZW0tcXVhbGl0eSJdJywgMjUsIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICAgIHNldHRpbmdzTWVudUJ1dHRvbiA9IGVsZW1lbnQ7CiAgICAgICAgICAgIHNldHRpbmdzTWVudUJ1dHRvbi5jbGljaygpOwogICAgICAgIH0pOwoKICAgICAgICAvLyBXYWl0IGZvciB0aGUgcXVhbGl0eSBvcHRpb25zIHRvIGxvYWQgYW5kIHNlbGVjdCB0aGUgcHJlZmVycmVkIHF1YWxpdHkgb3B0aW9uLgogICAgICAgIHdhaXRGb3JFbGVtZW50KCdbZGF0YS1hLXRhcmdldD0idHctcmFkaW8iXScsIDI1LCBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgICAgICB2YXIgaW5wdXRzeCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9InJhZGlvIl0nKQogICAgICAgICAgICB2YXIgYmVzdFF1YWxpdHlJbmRleCA9IDE7IC8vIDAgaXMgYXV0bywgMSBpcyBoaWdoZXN0CgogICAgICAgICAgICBpbnB1dHN4W2Jlc3RRdWFsaXR5SW5kZXhdLmNoZWNrZWQgPSB0cnVlOwogICAgICAgICAgICBpbnB1dHN4W2Jlc3RRdWFsaXR5SW5kZXhdLmNsaWNrKCk7CgogICAgICAgICAgICAvLyBDbGljayB0aGUgc2V0dGluZ3MgYnV0dG9uIGFnYWluLgogICAgICAgICAgICB3YWl0Rm9yRWxlbWVudCgnW2RhdGEtYS10YXJnZXQ9InBsYXllci1zZXR0aW5ncy1idXR0b24iXScsIEluZmluaXR5LCBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgICAgICAgICAgdmFyIHNldHRpbmdzQnV0dG9uID0gZWxlbWVudDsKICAgICAgICAgICAgICAgIHNldHRpbmdzQnV0dG9uLmNsaWNrKCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oIkNsaWNrZWQgU2V0dGluZ3MgQnV0dG9uIik7CiAgICAgICAgICAgIH0pCiAgICAgICAgfSk7CiAgICB9CgogICAgZnVuY3Rpb24gc2V0UXVhbGl0eVRvZ2dsZUZvckFkYmxvY2tGcmVlemVGaXgoKSB7CiAgICAgICAgbGV0IHNldHRpbmdzQnV0dG9uID0gbnVsbDsKICAgICAgICBsZXQgc2V0dGluZ3NNZW51QnV0dG9uID0gbnVsbDsKCiAgICAgICAgLy8gRW5zdXJlIHNldHRpbmdzIGlzIGNsb3NlZCB0byBzdGFydCBmcm9tIGtub3duIGdvb2QgcGxhY2UKICAgICAgICB3YWl0Rm9yRWxlbWVudCgnW2RhdGEtYS10YXJnZXQ9InBsYXllci1zZXR0aW5ncy1tZW51Il0nLCAxLCBmdW5jdGlvbihlbGVtZW50KSB7CiAgICAgICAgICAgIC8vIENsaWNrIHRoZSBzZXR0aW5ncyBidXR0b24uCiAgICAgICAgICAgIHdhaXRGb3JFbGVtZW50KCdbZGF0YS1hLXRhcmdldD0icGxheWVyLXNldHRpbmdzLWJ1dHRvbiJdJywgMjUsIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICAgICAgICBzZXR0aW5nc0J1dHRvbiA9IGVsZW1lbnQ7CiAgICAgICAgICAgICAgICBzZXR0aW5nc0J1dHRvbi5jbGljaygpOwogICAgICAgICAgICB9KTsKICAgICAgICB9KTsKCiAgICAgICAgLy8gQ2xpY2sgdGhlIHNldHRpbmdzIGJ1dHRvbi4KICAgICAgICB3YWl0Rm9yRWxlbWVudCgnW2RhdGEtYS10YXJnZXQ9InBsYXllci1zZXR0aW5ncy1idXR0b24iXScsIDI1LCBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgICAgICBzZXR0aW5nc0J1dHRvbiA9IGVsZW1lbnQ7CiAgICAgICAgICAgIHNldHRpbmdzQnV0dG9uLmNsaWNrKCk7CiAgICAgICAgfSk7CgogICAgICAgIC8vIENsaWNrIHRoZSBxdWFsaXR5IHNldHRpbmdzIGJ1dHRvbi4KICAgICAgICB3YWl0Rm9yRWxlbWVudCgnW2RhdGEtYS10YXJnZXQ9InBsYXllci1zZXR0aW5ncy1tZW51LWl0ZW0tcXVhbGl0eSJdJywgMjUsIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICAgIHNldHRpbmdzTWVudUJ1dHRvbiA9IGVsZW1lbnQ7CiAgICAgICAgICAgIHNldHRpbmdzTWVudUJ1dHRvbi5jbGljaygpOwogICAgICAgIH0pOwoKICAgICAgICAvLyBXYWl0IGZvciB0aGUgcXVhbGl0eSBvcHRpb25zIHRvIGxvYWQgYW5kIHNlbGVjdCB0aGUgcHJlZmVycmVkIHF1YWxpdHkgb3B0aW9uLgogICAgICAgIHdhaXRGb3JFbGVtZW50KCdbZGF0YS1hLXRhcmdldD0idHctcmFkaW8iXScsIDI1LCBmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgICAgICB2YXIgaW5wdXRzeCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2lucHV0W3R5cGU9InJhZGlvIl0nKQogICAgICAgICAgICB2YXIgYmVzdFF1YWxpdHlJbmRleCA9IDE7IC8vIDAgaXMgYXV0bywgMSBpcyBoaWdoZXN0CiAgICAgICAgICAgIHZhciBuZXh0QmVzdFF1YWxpdHlJbmRleCA9IDI7CgogICAgICAgICAgICBpbnB1dHN4W25leHRCZXN0UXVhbGl0eUluZGV4XS5jaGVja2VkID0gdHJ1ZTsKICAgICAgICAgICAgaW5wdXRzeFtuZXh0QmVzdFF1YWxpdHlJbmRleF0uY2xpY2soKTsKCiAgICAgICAgICAgIC8vIENsaWNrIHRoZSBzZXR0aW5ncyBidXR0b24gYWdhaW4uCiAgICAgICAgICAgIHdhaXRGb3JFbGVtZW50KCdbZGF0YS1hLXRhcmdldD0icGxheWVyLXNldHRpbmdzLWJ1dHRvbiJdJywgSW5maW5pdHksIGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICAgICAgICB2YXIgc2V0dGluZ3NCdXR0b24gPSBlbGVtZW50OwogICAgICAgICAgICAgICAgc2V0dGluZ3NCdXR0b24uY2xpY2soKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybigiQ2xpY2tlZCBTZXR0aW5ncyBCdXR0b24iKTsKICAgICAgICAgICAgfSkKICAgICAgICB9KTsKICAgIH0KfSkoKTs="},{"name":"Cookie Clicker Mods","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://orteil.dashnet.org/cookieclicker/","https://orteil.dashnet.org/cookieclicker/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":1719938442627,"run_in":null,"tags":[]},"storage":{"ts":1716425962780,"data":{}},"enabled":false,"position":5,"uuid":"32ad5896-6d1d-4147-b90f-45ccf78f7c5a","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgQ29va2llIENsaWNrZXIgTW9kcwovLyBAbmFtZXNwYWNlIENvb2tpZQovLyBAaW5jbHVkZSBodHRwOi8vb3J0ZWlsLmRhc2huZXQub3JnL2Nvb2tpZWNsaWNrZXIvCi8vIEBpbmNsdWRlIGh0dHBzOi8vb3J0ZWlsLmRhc2huZXQub3JnL2Nvb2tpZWNsaWNrZXIvCi8vIEB2ZXJzaW9uIDEKLy8gQGdyYW50IEdNX2dldFJlc291cmNlVGV4dAovLyBAcmVzb3VyY2UgY2doci5qcyBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vQ2hha2FhL2Nvb2tpZS1nYXJkZW4taGVscGVyLXJlbG9hZGVkL21haW4vQ29va2llR2FyZGVuSGVscGVyLXJlbG9hZGVkL21haW4uanMKLy8gQHJlc291cmNlIGF1dG8tZ2FyZGVuLmpzIGh0dHBzOi8vcGFzdGViaW4uY29tL3Jhdy9uY3M0QVNBeAovLyBAcmVzb3VyY2UgYXV0by1zdG9ja3MuanMgaHR0cHM6Ly9wYXN0ZWJpbi5jb20vcmF3Lzhxc0ZkTVJuCi8vID09L1VzZXJTY3JpcHQ9PQovLyBhdXRvLWdhcmRlbiA9IGh0dHBzOi8vc3RlYW1jb21tdW5pdHkuY29tL3NoYXJlZGZpbGVzL2ZpbGVkZXRhaWxzLz9pZD0yODU1OTE0MjgwCi8vIGF1dG8tc3RvY2tzID0gaHR0cHM6Ly9zdGVhbWNvbW11bml0eS5jb20vc2hhcmVkZmlsZXMvZmlsZWRldGFpbHMvP2lkPTI1OTkxODcwNDcKCihmdW5jdGlvbigpIHsKICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0b3BCYXIiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnCgogICAgLy8gaGVscGVycyB0byB3YWl0IGZvciBnYW1lIGFuZCBtb2RzIHRvIGluaXRpYWxpemUsIGdvIGJlbG93IGNsYXNzIHRvIGFjdHVhbGx5IGxvYWQgdGhpbmdzCiAgICBjbGFzcyBNb2RMb2FkZXIgewogICAgICAgIGNvbnN0cnVjdG9yKCkgewogICAgICAgICAgICB0aGlzLmxvYWRlciA9IHt9OwogICAgICAgIH0KICAgICAgICBsb2FkQ0NTRShsb2FkKSB7CiAgICAgICAgICAgIHRoaXMubG9hZGVyLmxvYWRDQ1NFID0gbG9hZDsKICAgICAgICAgICAgcmV0dXJuIHRoaXM7CiAgICAgICAgfQogICAgICAgIGFzeW5jIGxvYWQobG9hZEZ1bmMpIHsKICAgICAgICAgICAgYXdhaXQgdGhpcy5pbnRlcm5hbFdhaXRHYW1lUmVhZHkoKQogICAgICAgICAgICBhd2FpdCB0aGlzLmludGVybmFsV2FpdENDU0VSZWFkeSgpIC8vIG1vZCBmcmFtZXdvcmsgbmVlZHMgbG9hZGVkIGJlZm9yZSBvdGhlciBtb2RzCiAgICAgICAgICAgIGxvYWRGdW5jKCk7CiAgICAgICAgfQogICAgICAgIGludGVybmFsV2FpdEdhbWVSZWFkeSgpIHsKICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgICAgICAgICAgdmFyIGludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBHYW1lLnJlYWR5ICE9PSAndW5kZWZpbmVkJyAmJiBHYW1lLnJlYWR5KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpOwogICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwxMDAwKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIGludGVybmFsV2FpdENDU0VSZWFkeSgpIHsKICAgICAgICAgICAgaWYgKCF0aGlzLmxvYWRlci5sb2FkQ0NTRSkgcmV0dXJuOwoKICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gewogICAgICAgICAgICAgICAgR2FtZS5Mb2FkTW9kKCdodHRwczovL2tsYXR0bW9zZS5naXRodWIuaW8vQ29va2llQ2xpY2tlci9DQ1NFLmpzJyk7CiAgICAgICAgICAgICAgICB2YXIgaW50ZXJ2YWwgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICAgICAgICBpZihDQ1NFICYmIENDU0UuaXNMb2FkZWQpewogICAgICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTsKICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sMTAwMCk7CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH0KCgogICAgbmV3IE1vZExvYWRlcigpCiAgICAgICAgLmxvYWRDQ1NFKGZhbHNlKQogICAgICAgIC5sb2FkKAogICAgICAgICgpID0+IHsKICAgICAgICAgICAgLy8gc29tZSBtb2RzIGNhbiBqdXN0IGJlIGxvYWRlZCwgb3RoZXJzIGhhdmUgdG8gYmUgZXZhbGVkLiBkdW5ubyB3aHkuCiAgICAgICAgICAgIC8vIHNvbWUgY29tYmluYXRpb24gb2YgQ0NTRS9zdGVhbSBtb2RzL3J1bm5pbmcgdGhpcyBpbiBhIHNjb3BlZCBmdW5jdGlvbi9pIGR1bm5vCgogICAgICAgICAgICAvLyBhdXRvLXN0b2NrcyAtIHJlcXVpcmVzIENDU0UKICAgICAgICAgICAgLy9ldmFsPy4oR01fZ2V0UmVzb3VyY2VUZXh0KCJhdXRvLXN0b2Nrcy5qcyIpKTsKCiAgICAgICAgICAgIC8vIGF1dG8tZ2FyZGVuIC0gZG9lcyBub3QgcmVxdWlyZSBDQ1NFCiAgICAgICAgICAgIC8vIGV2YWw/LihHTV9nZXRSZXNvdXJjZVRleHQoImF1dG8tZ2FyZGVuLmpzIikpOwoKICAgICAgICAgICAgLy8gZ2FyZGVuIGhlbHBlciAtIGRvZXMgbm90IHJlcXVpcmUgQ0NTRQogICAgICAgICAgICBldmFsPy4oR01fZ2V0UmVzb3VyY2VUZXh0KCJjZ2hyLmpzIikpOwogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZ2FyZGVuVXBncmFkZXNQYW5lbCIpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7IC8vIHRoZSB1cGdyYWRlIHBhbmVsIHRha2VzIHVwIGEgYnVuY2ggb2YgdXNlbGVzcyBzcGFjZSBhZnRlciB5b3UgaGF2ZSB0aGVtIGFsbAoKICAgICAgICAgICAgLy8gaGFuZCBvZiBmYXRlIHByZWRpY3RvciAtIGRvZXMgbm90IHJlcXVpcmUgQ0NTRQogICAgICAgICAgICBHYW1lLkxvYWRNb2QoJ2h0dHBzOi8vaG9zdGluZy5ib2JhdGVhbGVlLmNvbS9tb2RzL2NsYWlydm95YW5jZS9tYWluLmpzJyk7CgogICAgICAgICAgICAvLyBjb29raWVtb25zdGVyIC0gZG9lcyBub3QgcmVxdWlyZSBDQ1NFIC0gbGFzdCBvdGhlcndpc2UgaXQgZmlnaHRzIGNjc2UgbW9kcwogICAgICAgICAgICBHYW1lLkxvYWRNb2QoJ2h0dHBzOi8vY29va2llbW9uc3RlcnRlYW0uZ2l0aHViLmlvL0Nvb2tpZU1vbnN0ZXIvZGlzdC9Db29raWVNb25zdGVyLmpzJyk7CiAgICAgICAgfSk7Cgp9KSgpOw==","resources":[{"meta":{"name":"main.js","url":"https://raw.githubusercontent.com/Chakaa/cookie-garden-helper-reloaded/main/CookieGardenHelper-reloaded/main.js","ts":1717970895613,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"ncs4ASAx","url":"https://pastebin.com/raw/ncs4ASAx","ts":1718314851444,"mimetype":"text/plain"},"source":""},{"meta":{"name":"8qsFdMRn","url":"https://pastebin.com/raw/8qsFdMRn","ts":1718315486912,"mimetype":"text/plain"},"source":""}]},{"name":"CookieAuto","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://orteil.dashnet.org/cookieclicker/","http://orteil.dashnet.org/cookieclicker/"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":1734804843268,"run_in":null,"tags":[]},"storage":{"ts":1723072812247,"data":{"Business Day":"bfalse","Elder Pledge":"bfalse","Fortunes":"btrue","Golden Cookie":"bfalse","Reindeer":"bfalse","Sugar Lump":"btrue","Wrinklers":"bfalse"}},"enabled":false,"position":6,"uuid":"f502dff1-7a92-470f-8ef3-1cc3fc63b3cd","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIENvb2tpZUF1dG8KLy8gQGF1dGhvciAgICAgIHdoYXRldmVyCi8vIEBuYW1lc3BhY2UgICBjb29raWVhdXRvCi8vIEB2ZXJzaW9uICAgICAxCi8vIEBtYXRjaCAgICAgICBodHRwczovL29ydGVpbC5kYXNobmV0Lm9yZy9jb29raWVjbGlja2VyLwovLyBAbWF0Y2ggaHR0cDovL29ydGVpbC5kYXNobmV0Lm9yZy9jb29raWVjbGlja2VyLwovLyBAZ3JhbnQgR01fc2V0VmFsdWUKLy8gQGdyYW50IEdNX2dldFZhbHVlCi8vIEBncmFudCBHTV9yZWdpc3Rlck1lbnVDb21tYW5kCi8vIEBncmFudCBHTV91bnJlZ2lzdGVyTWVudUNvbW1hbmQKLy8gPT0vVXNlclNjcmlwdD09CgoKKGFzeW5jIGZ1bmN0aW9uICgpIHsKCiAgICB2YXIgd2FpdEdhbWVSZWFkeSA9ICgpID0+IHsKICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgICAgIHZhciBpbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBHYW1lLnJlYWR5ICE9PSAndW5kZWZpbmVkJyAmJiBHYW1lLnJlYWR5KSB7CiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7CiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LDEwMDApOwogICAgICAgIH0pOwogICAgfTsKCiAgICBjb25zdCBnY1RvZ2dsZUtleSA9ICJHb2xkZW4gQ29va2llIjsKICAgIGNvbnN0IHJlaW5kZWVyVG9nZ2xlS2V5ID0gIlJlaW5kZWVyIjsKICAgIGNvbnN0IHBsZWRnZVRvZ2dsZUtleSA9ICJFbGRlciBQbGVkZ2UiOwogICAgY29uc3QgZm9ydHVuZVRvZ2dsZUtleSA9ICJGb3J0dW5lcyI7CiAgICBjb25zdCB3cmlua2xlclRvZ2dsZUtleSA9ICJXcmlua2xlcnMiOwogICAgY29uc3QgYnVzaW5lc3NEYXlUb2dnbGVLZXkgPSAiQnVzaW5lc3MgRGF5IjsKICAgIGNvbnN0IHN1Z2FyTHVtcFRvZ2dsZUtleSA9ICJTdWdhciBMdW1wIjsKCiAgICB2YXIgdG9nZ2xlcyA9IHt9OwoKICAgIHZhciB0b2dnbGVGdW5jID0gZnVuY3Rpb24gKHRvZ2dsZUtleSkgewogICAgICAgIHZhciBjdXJyZW50VmFsdWUgPSBHTV9nZXRWYWx1ZSh0b2dnbGVLZXksIHRydWUpOwogICAgICAgIHZhciBuZXdWYWx1ZSA9ICFjdXJyZW50VmFsdWU7CiAgICAgICAgR01fc2V0VmFsdWUodG9nZ2xlS2V5LCBuZXdWYWx1ZSk7CiAgICAgICAgc2V0TWVudSh0b2dnbGVLZXkpOwogICAgfQoKICAgIHZhciBzZXRNZW51ID0gZnVuY3Rpb24gKHRvZ2dsZUtleSkgewogICAgICAgIHZhciBjdXJyZW50VmFsdWUgPSBHTV9nZXRWYWx1ZSh0b2dnbGVLZXksIG51bGwpOwogICAgICAgIEdNX3VucmVnaXN0ZXJNZW51Q29tbWFuZCh0b2dnbGVzW3RvZ2dsZUtleV0pOwogICAgICAgIHRvZ2dsZXNbdG9nZ2xlS2V5XSA9IEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQoYCR7dG9nZ2xlS2V5fSAoJHtjdXJyZW50VmFsdWV9KWAsIGZ1bmN0aW9uICgpIHsgdG9nZ2xlRnVuYyh0b2dnbGVLZXkpIH0pOwogICAgfQoKICAgIHNldE1lbnUoYnVzaW5lc3NEYXlUb2dnbGVLZXkpOwogICAgc2V0TWVudShzdWdhckx1bXBUb2dnbGVLZXkpOwogICAgc2V0TWVudShyZWluZGVlclRvZ2dsZUtleSk7CiAgICBzZXRNZW51KGZvcnR1bmVUb2dnbGVLZXkpOwogICAgc2V0TWVudSh3cmlua2xlclRvZ2dsZUtleSk7CiAgICBzZXRNZW51KHBsZWRnZVRvZ2dsZUtleSk7CiAgICBzZXRNZW51KGdjVG9nZ2xlS2V5KTsKCiAgICB2YXIgZ2NDbGljayA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgZW5hYmxlZCA9IEdNX2dldFZhbHVlKGdjVG9nZ2xlS2V5LCBmYWxzZSk7CiAgICAgICAgaWYgKGVuYWJsZWQpIHsKICAgICAgICAgICAgR2FtZS5zaGltbWVycy5mb3JFYWNoKGZ1bmN0aW9uIChzaGltbWVyKSB7IGlmIChzaGltbWVyLnR5cGUgPT0gImdvbGRlbiIgJiYgc2hpbW1lci53cmF0aCA9PSAwKSBzaGltbWVyLnBvcCgpIH0pCiAgICAgICAgfQogICAgfTsKCiAgICB2YXIgZm9ydHVuZUNsaWNrID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBlbmFibGVkID0gR01fZ2V0VmFsdWUoZm9ydHVuZVRvZ2dsZUtleSwgZmFsc2UpOwogICAgICAgIGlmIChlbmFibGVkKSB7CiAgICAgICAgICAgIGlmIChHYW1lLlRpY2tlckVmZmVjdCAmJiBHYW1lLlRpY2tlckVmZmVjdC50eXBlID09ICdmb3J0dW5lJykgeyBHYW1lLnRpY2tlckwuY2xpY2soKTsgfQogICAgICAgIH0KICAgIH07CgogICAgdmFyIHBsZWRnZUNsaWNrID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBlbmFibGVkID0gR01fZ2V0VmFsdWUocGxlZGdlVG9nZ2xlS2V5LCBmYWxzZSk7CiAgICAgICAgaWYgKGVuYWJsZWQpIHsKICAgICAgICAgICAgaWYgKEdhbWUuVXBncmFkZXNJblN0b3JlLmluZGV4T2YoR2FtZS5VcGdyYWRlc1siRWxkZXIgUGxlZGdlIl0pICE9IC0xKSB7CiAgICAgICAgICAgICAgICBHYW1lLlVwZ3JhZGVzWyJFbGRlciBQbGVkZ2UiXS5idXkoKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH07CgogICAgdmFyIHJlaW5kZWVyQ2xpY2sgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGVuYWJsZWQgPSBHTV9nZXRWYWx1ZShyZWluZGVlclRvZ2dsZUtleSwgZmFsc2UpOwogICAgICAgIGlmIChlbmFibGVkKSB7CiAgICAgICAgICAgIEdhbWUuc2hpbW1lcnMuZm9yRWFjaChmdW5jdGlvbiAoc2hpbW1lcikgeyBpZiAoc2hpbW1lci50eXBlID09ICJyZWluZGVlciIpIHNoaW1tZXIucG9wKCkgfSkKICAgICAgICB9CiAgICB9OwoKICAgIHZhciB3cmlua2xlckNsaWNrID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBlbmFibGVkID0gR01fZ2V0VmFsdWUod3JpbmtsZXJUb2dnbGVLZXksIGZhbHNlKTsKICAgICAgICBpZiAoZW5hYmxlZCkgewogICAgICAgICAgICBHYW1lLndyaW5rbGVycy5maWx0ZXIod3JpbmtsZXIgPT4gd3JpbmtsZXIuc3Vja2VkID4gMCAmJiB3cmlua2xlci50eXBlID09IDApLmZvckVhY2god3JpbmtsZXIgPT4gd3JpbmtsZXIuaHAgPSAwKTsKICAgICAgICB9CiAgICB9OwoKICAgIHZhciBidXNpbmVzc0RheUNsaWNrID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBlbmFibGVkID0gR01fZ2V0VmFsdWUoYnVzaW5lc3NEYXlUb2dnbGVLZXksIGZhbHNlKTsKICAgICAgICBpZiAoZW5hYmxlZCkgewogICAgICAgICAgICB2YXIgdXBncmFkZSA9IEdhbWUuVXBncmFkZXNbIkZvb2wncyBiaXNjdWl0Il07CiAgICAgICAgICAgIGlmICh1cGdyYWRlLnVubG9ja2VkICYmICF1cGdyYWRlLmJvdWdodCAmJiB1cGdyYWRlLmNhbkJ1eSgpKSB1cGdyYWRlLmJ1eSgpOwogICAgICAgIH0KICAgIH07CgogICAgdmFyIHN1Z2FyTHVtcENsaWNrID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBlbmFibGVkID0gR01fZ2V0VmFsdWUoc3VnYXJMdW1wVG9nZ2xlS2V5LCBmYWxzZSk7CiAgICAgICAgaWYgKGVuYWJsZWQpIHsKICAgICAgICAgICAgdmFyIGFnZSA9IERhdGUubm93KCkgLSBHYW1lLmx1bXBUOwogICAgICAgICAgICBpZiAoR2FtZS5sdW1wQ3VycmVudFR5cGUgIT0gMiAmJiBhZ2UgPiBHYW1lLmx1bXBSaXBlQWdlKSBHYW1lLmNsaWNrTHVtcCgpOwogICAgICAgIH0KICAgIH07CgogICAgYXdhaXQgd2FpdEdhbWVSZWFkeSgpOwoKICAgIHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgICBwbGVkZ2VDbGljaygpOwogICAgICAgIGZvcnR1bmVDbGljaygpOwogICAgICAgIHJlaW5kZWVyQ2xpY2soKTsKICAgICAgICB3cmlua2xlckNsaWNrKCk7CiAgICAgICAgZ2NDbGljaygpOwogICAgICAgIGJ1c2luZXNzRGF5Q2xpY2soKTsKICAgICAgICBzdWdhckx1bXBDbGljaygpOwogICAgfSwgNTAwKTsKCn0pKCk7"},{"name":"Cookie Clicker Button Helpers","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://orteil.dashnet.org/cookieclicker/","http://orteil.dashnet.org/cookieclicker/"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":1721604362489,"run_in":null,"tags":[]},"storage":{"ts":1717865139773,"data":{}},"enabled":false,"position":7,"uuid":"ba2f7d67-00db-4c0a-837c-54e0cbdac024","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIENvb2tpZSBDbGlja2VyIEJ1dHRvbiBIZWxwZXJzCi8vIEBhdXRob3IgICAgICB3aGF0ZXZlcgovLyBAbmFtZXNwYWNlICAgY29va2llYXV0b3NlbGxlcgovLyBAdmVyc2lvbiAgICAgMQovLyBAbWF0Y2ggICAgICAgaHR0cHM6Ly9vcnRlaWwuZGFzaG5ldC5vcmcvY29va2llY2xpY2tlci8KLy8gQG1hdGNoIGh0dHA6Ly9vcnRlaWwuZGFzaG5ldC5vcmcvY29va2llY2xpY2tlci8KLy8gQGdyYW50IG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgoKKGFzeW5jIGZ1bmN0aW9uICgpIHsKCiAgICB2YXIgd2FpdEdhbWVSZWFkeSA9ICgpID0+IHsKICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgICAgIHZhciBpbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBHYW1lLnJlYWR5ICE9PSAndW5kZWZpbmVkJyAmJiBHYW1lLnJlYWR5KSB7CiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7CiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LDEwMDApOwogICAgICAgIH0pOwogICAgfTsKCiAgICBhd2FpdCB3YWl0R2FtZVJlYWR5KCk7CgogICAgdmFyIHNlbGxCdXR0b25Db250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTsKICAgIHNlbGxCdXR0b25Db250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICdzZWxsQnV0dG9uQ29udGFpbmVyJyk7CiAgICBzZWxsQnV0dG9uQ29udGFpbmVyLmlubmVySFRNTCA9ICc8YSBjbGFzcz0ib3B0aW9uIiBpZD0iZ29kemFtb2tTZWxsIj5TZWxsPC9hPicKICAgICAgICArICc8YSBjbGFzcz0ib3B0aW9uIiBpZD0iZ29kemFtb2tSZWJ1eSI+UmUtQnV5PC9hPicKICAgICAgICArICc8YSBjbGFzcz0ib3B0aW9uIiBpZD0iYnV5VGhlTG9hbnMiPkxvYW5zPC9hPicKICAgICAgICArICc8YSBjbGFzcz0ib3B0aW9uIiBpZD0iaW5jbHVkZUxvYW4xIiBzdHlsZT0idGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSBvdmVybGluZSI+MTwvYT4nCiAgICAgICAgKyAnPGEgY2xhc3M9Im9wdGlvbiIgaWQ9ImluY2x1ZGVMb2FuMiIgc3R5bGU9InRleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgb3ZlcmxpbmUiPjI8L2E+JwogICAgICAgICsgJzxhIGNsYXNzPSJvcHRpb24iIGlkPSJpbmNsdWRlTG9hbjMiIHN0eWxlPSJ0ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIG92ZXJsaW5lIj4zPC9hPicKICAgICAgICArICc8YSBjbGFzcz0ib3B0aW9uIiBpZD0ia3J1bWJsb3JidXk1MCIgc3R5bGU9ImZsb2F0OnJpZ2h0Ij5CdXkgNTA8L2E+JzsKCiAgICB2YXIgc3RvcmUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic3RvcmUiKTsKICAgIHN0b3JlLmluc2VydEJlZm9yZShzZWxsQnV0dG9uQ29udGFpbmVyLCBzdG9yZS5maXJzdENoaWxkKTsKCiAgICB2YXIgbG9hbnMgPSB7ImluY2x1ZGVMb2FuMSI6IHRydWUsICJpbmNsdWRlTG9hbjIiOiB0cnVlLCAiaW5jbHVkZUxvYW4zIjogdHJ1ZX07CgogICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImdvZHphbW9rU2VsbCIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZ29kemFtb2tTZWxsQWN0aW9uKTsKICAgIGZ1bmN0aW9uIGdvZHphbW9rU2VsbEFjdGlvbihldmVudCkgewogICAgICAgIEdhbWUuT2JqZWN0c1snRmFybSddLnNlbGwoLTEpOwogICAgICAgIEdhbWUuT2JqZWN0c1snTWluZSddLnNlbGwoLTEpOwogICAgICAgIEdhbWUuT2JqZWN0c1snRmFjdG9yeSddLnNlbGwoLTEpOwogICAgICAgIEdhbWUuT2JqZWN0c1snQmFuayddLnNlbGwoLTEpOwogICAgICAgIEdhbWUuT2JqZWN0c1snVGVtcGxlJ10uc2VsbCgtMSk7CiAgICAgICAgR2FtZS5PYmplY3RzWydTaGlwbWVudCddLnNlbGwoLTEpOwogICAgICAgIEdhbWUuT2JqZWN0c1snQWxjaGVteSBsYWInXS5zZWxsKC0xKTsKICAgICAgICBHYW1lLk9iamVjdHNbJ1BvcnRhbCddLnNlbGwoLTEpOwogICAgICAgIEdhbWUuT2JqZWN0c1snQW50aW1hdHRlciBjb25kZW5zZXInXS5zZWxsKC0xKTsKICAgIH0KCiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZ29kemFtb2tSZWJ1eSIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZ29kemFtb2tSZWJ1eUFjdGlvbik7CiAgICBmdW5jdGlvbiBnb2R6YW1va1JlYnV5QWN0aW9uKGV2ZW50KSB7CiAgICAgICAgdmFyIGJ1eUFtdCA9IDcwMDsKICAgICAgICBHYW1lLmJ1eU1vZGU9MTsKICAgICAgICBHYW1lLk9iamVjdHNbJ0Zhcm0nXS5idXkoYnV5QW10KTsKICAgICAgICBHYW1lLk9iamVjdHNbJ01pbmUnXS5idXkoYnV5QW10KTsKICAgICAgICBHYW1lLk9iamVjdHNbJ0ZhY3RvcnknXS5idXkoYnV5QW10KTsKICAgICAgICBHYW1lLk9iamVjdHNbJ0JhbmsnXS5idXkoYnV5QW10KTsKICAgICAgICBHYW1lLk9iamVjdHNbJ1RlbXBsZSddLmJ1eShidXlBbXQpOwogICAgICAgIEdhbWUuT2JqZWN0c1snU2hpcG1lbnQnXS5idXkoYnV5QW10KTsKICAgICAgICBHYW1lLk9iamVjdHNbJ0FsY2hlbXkgbGFiJ10uYnV5KGJ1eUFtdCk7CiAgICAgICAgR2FtZS5PYmplY3RzWydQb3J0YWwnXS5idXkoYnV5QW10KTsKICAgICAgICBHYW1lLk9iamVjdHNbJ0FudGltYXR0ZXIgY29uZGVuc2VyJ10uYnV5KGJ1eUFtdCk7CiAgICB9CgogICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImtydW1ibG9yYnV5NTAiKS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGtydW1ibG9yYnV5NTBBY3Rpb24pOwogICAgZnVuY3Rpb24ga3J1bWJsb3JidXk1MEFjdGlvbihldmVudCkgewogICAgICAgIEdhbWUuYnV5TW9kZT0xOwogICAgICAgIEdhbWUuT2JqZWN0c0J5SWQuZm9yRWFjaChidWlsZGluZyA9PiBidWlsZGluZy5idXkoNTApKTsKICAgIH0KCiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiaW5jbHVkZUxvYW4xIikuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCB0b2dnbGVMb2FuKTsKICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJpbmNsdWRlTG9hbjIiKS5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIHRvZ2dsZUxvYW4pOwogICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImluY2x1ZGVMb2FuMyIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgdG9nZ2xlTG9hbik7CiAgICBmdW5jdGlvbiB0b2dnbGVMb2FuKGV2ZW50KSB7CiAgICAgICAgdmFyIGxvYW5JZCA9IGV2ZW50LnNyY0VsZW1lbnQuaWQ7CiAgICAgICAgdmFyIGxvYW5CdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChsb2FuSWQpOwogICAgICAgIGxvYW5zW2xvYW5JZF0gPSAhbG9hbnNbbG9hbklkXTsKICAgICAgICBpZiAobG9hbnNbbG9hbklkXSkgewogICAgICAgICAgICBsb2FuQnRuLnN0eWxlLnRleHREZWNvcmF0aW9uID0gJ3VuZGVybGluZSBvdmVybGluZSc7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgbG9hbkJ0bi5zdHlsZS50ZXh0RGVjb3JhdGlvbiA9IG51bGw7CiAgICAgICAgfQogICAgfQoKICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJidXlUaGVMb2FucyIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgYnV5TG9hbnMpOwogICAgZnVuY3Rpb24gYnV5TG9hbnMoZXZlbnQpIHsKICAgICAgICBpZiAobG9hbnMuaW5jbHVkZUxvYW4xKSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYmFua0xvYW4xIikuY2xpY2soKTsKICAgICAgICBpZiAobG9hbnMuaW5jbHVkZUxvYW4yKSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYmFua0xvYW4yIikuY2xpY2soKTsKICAgICAgICBpZiAobG9hbnMuaW5jbHVkZUxvYW4zKSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiYmFua0xvYW4zIikuY2xpY2soKTsKICAgIH0KCn0pKCk7Cgo="},{"name":"Cookie Clicker Save Helper","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://orteil.dashnet.org/cookieclicker/","http://orteil.dashnet.org/cookieclicker/"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null,"run_in":null,"tags":[]},"storage":{"ts":1722816236306,"data":{"cookieclickerautosave":"btrue"}},"enabled":true,"position":8,"uuid":"8852c90b-ef29-4a7a-bd71-92f19cb10586","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIENvb2tpZSBDbGlja2VyIFNhdmUgSGVscGVyCi8vIEBhdXRob3IgICAgICB3aGF0ZXZlcgovLyBAbmFtZXNwYWNlICAgY29va2llc2F2ZWhlbHBlcgovLyBAdmVyc2lvbiAgICAgMQovLyBAbWF0Y2ggICAgICAgaHR0cHM6Ly9vcnRlaWwuZGFzaG5ldC5vcmcvY29va2llY2xpY2tlci8KLy8gQG1hdGNoIGh0dHA6Ly9vcnRlaWwuZGFzaG5ldC5vcmcvY29va2llY2xpY2tlci8KLy8gQGdyYW50IEdNX3NldFZhbHVlCi8vIEBncmFudCBHTV9nZXRWYWx1ZQovLyBAZ3JhbnQgR01fcmVnaXN0ZXJNZW51Q29tbWFuZAovLyBAZ3JhbnQgR01fdW5yZWdpc3Rlck1lbnVDb21tYW5kCi8vID09L1VzZXJTY3JpcHQ9PQoKCihhc3luYyBmdW5jdGlvbiAoKSB7CgogICAgY29uc3Qgb25lRGF5ID0gMTAwMCAqIDYwICogNjAgKiAyNDsKCiAgICB2YXIgd2FpdEdhbWVSZWFkeSA9ICgpID0+IHsKICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgICAgIHZhciBpbnRlcnZhbCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBHYW1lLnJlYWR5ICE9PSAndW5kZWZpbmVkJyAmJiBHYW1lLnJlYWR5KSB7CiAgICAgICAgICAgICAgICAgICAgY2xlYXJJbnRlcnZhbChpbnRlcnZhbCk7CiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LDEwMDApOwogICAgICAgIH0pOwogICAgfTsKCiAgICBjb25zdCBhdXRvU2F2ZUtleSA9ICJjb29raWVjbGlja2VyYXV0b3NhdmUiOwogICAgdmFyIG1lbnVJdGVtID0gbnVsbDsKCiAgICB2YXIgdG9nZ2xlRnVuYyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgY3VycmVudFZhbHVlID0gR01fZ2V0VmFsdWUoYXV0b1NhdmVLZXksIHRydWUpOwogICAgICAgIHZhciBuZXdWYWx1ZSA9ICFjdXJyZW50VmFsdWU7CiAgICAgICAgR01fc2V0VmFsdWUoYXV0b1NhdmVLZXksIG5ld1ZhbHVlKTsKICAgICAgICBzZXRNZW51KCk7CiAgICB9CgogICAgdmFyIHNldE1lbnUgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGN1cnJlbnRWYWx1ZSA9IEdNX2dldFZhbHVlKGF1dG9TYXZlS2V5LCBudWxsKTsKICAgICAgICBHTV91bnJlZ2lzdGVyTWVudUNvbW1hbmQobWVudUl0ZW0pOwogICAgICAgIG1lbnVJdGVtID0gR01fcmVnaXN0ZXJNZW51Q29tbWFuZChgQXV0b3NhdmU6ICR7Y3VycmVudFZhbHVlfWAsIGZ1bmN0aW9uICgpIHsgdG9nZ2xlRnVuYygpOyB9KTsKICAgIH0KCiAgICBzZXRNZW51KCk7CgogICAgYXdhaXQgd2FpdEdhbWVSZWFkeSgpOwoKICAgIC8vIGluY2x1ZGUgZGF0ZXRpbWUgaW4gc2F2ZSBmaWxlbmFtZQogICAgR2FtZS5GaWxlU2F2ZT1mdW5jdGlvbigpIHsKICAgICAgICBpZiAoQXBwKSByZXR1cm4gZmFsc2U7CiAgICAgICAgR2FtZS5wcmVmcy5zaG93QmFja3VwV2FybmluZz0wOwoKICAgICAgICB2YXIgY3VycmVudGRhdGUgPSBuZXcgRGF0ZSgpOwogICAgICAgIHZhciBkYXRldGltZSA9IGN1cnJlbnRkYXRlLmdldEZ1bGxZZWFyKCkKICAgICAgICArICItIiArIChjdXJyZW50ZGF0ZS5nZXRNb250aCgpKzEpCiAgICAgICAgKyAiLSIgKyBjdXJyZW50ZGF0ZS5nZXREYXRlKCkKICAgICAgICArICIgIgogICAgICAgICsgY3VycmVudGRhdGUuZ2V0SG91cnMoKSArICI6IgogICAgICAgICsgY3VycmVudGRhdGUuZ2V0TWludXRlcygpICsgIjoiCiAgICAgICAgKyBjdXJyZW50ZGF0ZS5nZXRTZWNvbmRzKCk7CgogICAgICAgIHZhciBmaWxlbmFtZT1kYXRldGltZSArICIgIiArIEdhbWUuYmFrZXJ5TmFtZS5yZXBsYWNlKC9bXmEtekEtWjAtOV0rL2csJycpKydCYWtlcnknOwogICAgICAgIHZhciB0ZXh0PUdhbWUuV3JpdGVTYXZlKDEpOwogICAgICAgIHZhciBibG9iPW5ldyBCbG9iKFt0ZXh0XSx7dHlwZTondGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04J30pOwogICAgICAgIHNhdmVBcyhibG9iLGZpbGVuYW1lKycudHh0Jyk7CiAgICB9CgogICAgLy8gc2V0dXAgZGlzcGxheSBmb3IgbmV4dCBhdXRvIHNhdmUgdGltZQogICAgdmFyIG5leHRTYXZlQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICBuZXh0U2F2ZUNvbnRhaW5lci5zZXRBdHRyaWJ1dGUoJ2lkJywgJ25leHRTYXZlQ29udGFpbmVyJyk7CiAgICBuZXh0U2F2ZUNvbnRhaW5lci5zdHlsZS5mbG9hdCA9ICJyaWdodCI7CiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgidG9wQmFyIikuaW5zZXJ0QWRqYWNlbnRFbGVtZW50KCJhZnRlcmVuZCIsIG5leHRTYXZlQ29udGFpbmVyKTsKCiAgICB2YXIgbmV4dCA9IG9uZURheTsKCiAgICB2YXIgZGlzcGxheU5leHRTYXZlID0gZnVuY3Rpb24oKSB7CiAgICAgICAgbmV4dFNhdmVDb250YWluZXIuaW5uZXJUZXh0ID0gIk5leHQgU2F2ZTogIiArIG5ldyBEYXRlKG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgbmV4dCkudG9Mb2NhbGVTdHJpbmcoKTsKICAgIH07CgogICAgdmFyIHNhdmUgPSBmdW5jdGlvbigpIHsKICAgICAgICBkaXNwbGF5TmV4dFNhdmUoKTsKICAgICAgICB2YXIgZW5hYmxlZCA9IEdNX2dldFZhbHVlKGF1dG9TYXZlS2V5LCBmYWxzZSk7CiAgICAgICAgaWYgKGVuYWJsZWQpIEdhbWUuRmlsZVNhdmUoKTsKICAgIH07CgogICAgdmFyIGF1dG9TYXZlVGltZXIgPSBzZXRJbnRlcnZhbChzYXZlLCBuZXh0KTsKCiAgICBkaXNwbGF5TmV4dFNhdmUoKTsKCn0pKCk7Cg=="},{"name":"Cookie Clicker GC Frequency","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://orteil.dashnet.org/cookieclicker/"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null,"run_in":null,"tags":[]},"storage":{"ts":1718601064606,"data":{}},"enabled":false,"position":9,"uuid":"3fe39a78-8161-4954-91d8-abc0e92d2bd3","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIENvb2tpZSBDbGlja2VyIEdDIEZyZXF1ZW5jeQovLyBAYXV0aG9yICAgICAgd2hhdGV2ZXIKLy8gQG5hbWVzcGFjZSAgIGNvb2tpZXNnY2ZyZXEKLy8gQHZlcnNpb24gICAgIDEKLy8gQG1hdGNoICAgICAgIGh0dHBzOi8vb3J0ZWlsLmRhc2huZXQub3JnL2Nvb2tpZWNsaWNrZXIvCi8vIEBncmFudCBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewoKICAgIHZhciBmcmVxcyA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgICAgIHZhciB0b29sc1RleHREaXYgPSBBcnJheS5mcm9tKGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImdhcmRlblBhbmVsTGFiZWwiKSkuZmlsdGVyKGEgPT4gYS5pbm5lclRleHQuc3RhcnRzV2l0aCgiVG9vbHMiKSlbMF07CiAgICAgICAgdmFyIG5ld3RleHQgPSBgVG9vbHMsIEZyZXE6ICR7R2FtZS5lZmZzLmdvbGRlbkNvb2tpZUZyZXEudG9GaXhlZCgyKX0sIEZyZXErOiAkeyhHYW1lLmVmZnMuZ29sZGVuQ29va2llRnJlcSAqIDEuMjUpLnRvRml4ZWQoMil9YDsKICAgICAgICB0b29sc1RleHREaXYuaW5uZXJUZXh0ID0gbmV3dGV4dDsKICAgIH0sIDUwMDApOwoKfSkoKTs="},{"name":"Cookie Clicker Ascender","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://orteil.dashnet.org/cookieclicker/"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":null,"run_in":null,"tags":[]},"storage":{"ts":1721576427717,"data":{"cookieascender":"bfalse"}},"enabled":false,"position":10,"uuid":"d30f4bb2-152c-4129-b085-f2ddb6329a5b","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIENvb2tpZSBDbGlja2VyIEFzY2VuZGVyCi8vIEBhdXRob3IgICAgICB3aGF0ZXZlcgovLyBAbmFtZXNwYWNlICAgY29va2llYXNjZW5kZXIKLy8gQHZlcnNpb24gICAgIDEKLy8gQG1hdGNoICAgICAgIGh0dHBzOi8vb3J0ZWlsLmRhc2huZXQub3JnL2Nvb2tpZWNsaWNrZXIvCi8vIEBncmFudCBHTV9zZXRWYWx1ZQovLyBAZ3JhbnQgR01fZ2V0VmFsdWUKLy8gQGdyYW50IEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQKLy8gQGdyYW50IEdNX3VucmVnaXN0ZXJNZW51Q29tbWFuZAovLyA9PS9Vc2VyU2NyaXB0PT0KCgooYXN5bmMgZnVuY3Rpb24gKCkgewoKICAgIHZhciB3YWl0R2FtZVJlYWR5ID0gKCkgPT4gewogICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgICAgICAgdmFyIGludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIEdhbWUucmVhZHkgIT09ICd1bmRlZmluZWQnICYmIEdhbWUucmVhZHkpIHsKICAgICAgICAgICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTsKICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sMTAwMCk7CiAgICAgICAgfSk7CiAgICB9OwoKICAgIGNvbnN0IGF1dG9TYXZlS2V5ID0gImNvb2tpZWFzY2VuZGVyIjsKICAgIHZhciBtZW51SXRlbSA9IG51bGw7CgogICAgdmFyIHRvZ2dsZUZ1bmMgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGN1cnJlbnRWYWx1ZSA9IEdNX2dldFZhbHVlKGF1dG9TYXZlS2V5LCB0cnVlKTsKICAgICAgICB2YXIgbmV3VmFsdWUgPSAhY3VycmVudFZhbHVlOwogICAgICAgIEdNX3NldFZhbHVlKGF1dG9TYXZlS2V5LCBuZXdWYWx1ZSk7CiAgICAgICAgc2V0TWVudSgpOwogICAgfQoKICAgIHZhciBzZXRNZW51ID0gZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBjdXJyZW50VmFsdWUgPSBHTV9nZXRWYWx1ZShhdXRvU2F2ZUtleSwgbnVsbCk7CiAgICAgICAgR01fdW5yZWdpc3Rlck1lbnVDb21tYW5kKG1lbnVJdGVtKTsKICAgICAgICBtZW51SXRlbSA9IEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQoYEVuYWJsZWQ6ICR7Y3VycmVudFZhbHVlfWAsIGZ1bmN0aW9uICgpIHsgdG9nZ2xlRnVuYygpOyB9KTsKICAgIH0KCiAgICBzZXRNZW51KCk7CgogICAgYXdhaXQgd2FpdEdhbWVSZWFkeSgpOwoKICAgIHZhciB0aWNrID0gZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGVuYWJsZWQgPSBHTV9nZXRWYWx1ZShhdXRvU2F2ZUtleSwgZmFsc2UpOwogICAgICAgIGlmIChlbmFibGVkKSBwcm9ncmVzcygpOwogICAgfTsKCiAgICB2YXIgc2hvdWxkQXNjZW5kID0gZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIEdhbWUuYXNjZW5kTnVtYmVyLnN0eWxlLmRpc3BsYXkgIT0gJ25vbmUnOwogICAgfTsKCiAgICB2YXIgaXNBc2NlbmRpbmcgPSBmYWxzZTsKICAgIHZhciBkb0FzY2VuZCA9IGFzeW5jIGZ1bmN0aW9uKCkgewogICAgICAgIGlzQXNjZW5kaW5nID0gdHJ1ZTsKICAgICAgICBHYW1lLkFzY2VuZCgxKTsKICAgICAgICBhd2FpdCBuZXcgUHJvbWlzZShyID0+IHNldFRpbWVvdXQociwgMTAqMTAwMCkpOwogICAgICAgIEdhbWUuUmVpbmNhcm5hdGUoMSk7CiAgICAgICAgaXNBc2NlbmRpbmcgPSBmYWxzZTsKICAgIH07CgogICAgdmFyIHByb2dyZXNzID0gZnVuY3Rpb24oKSB7CiAgICAgICAgaWYgKGlzQXNjZW5kaW5nKSB7CiAgICAgICAgfSBlbHNlIGlmIChzaG91bGRBc2NlbmQoKSkgewogICAgICAgICAgICBkb0FzY2VuZCgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciB1cGdyYWRlQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInN0b3JlQnV5QWxsQnV0dG9uIik7CiAgICAgICAgICAgIGlmICh1cGdyYWRlQnV0dG9uKSB7CiAgICAgICAgICAgICAgICB1cGdyYWRlQnV0dG9uLmNsaWNrKCk7CgogICAgICAgICAgICAgICAgR2FtZS5idXlNb2RlPTE7CiAgICAgICAgICAgICAgICBpZiAoR2FtZS5PYmplY3RzWydDdXJzb3InXS5hbW91bnQgPCA5MDAgKSB7CiAgICAgICAgICAgICAgICAgICAgR2FtZS5PYmplY3RzQnlJZC5mb3JFYWNoKGJ1aWxkaW5nID0+IGJ1aWxkaW5nLmJ1eSg1MCkpOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICBHYW1lLk9iamVjdHNbJ1lvdSddLmJ1eSgxMDApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfTsKCiAgICB2YXIgYXNjZW5kZXJJbnRlcnZhbCA9IHNldEludGVydmFsKHRpY2ssIDEwMDApOwoKfSkoKTsK"},{"name":"TwitchAdSolutions (vaft)","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://*.twitch.tv/*"],"orig_noframes":null,"orig_run_at":"document-start","orig_run_in":[],"orig_tags":[],"use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null,"run_in":null,"sandbox":null,"tags":[],"unwrap":null,"user_modified":null},"storage":{"ts":1726358884196,"data":{}},"enabled":true,"position":11,"file_url":"https://github.com/pixeltris/TwitchAdSolutions/raw/master/vaft/vaft.user.js","uuid":"093b689d-17e5-4bb7-a259-a615bd40b716","source":""},{"name":"MFL Logo","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_powerful_this":null,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["https://www49.myfantasyleague.com/*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[],"orig_run_in":[]},"run_at":null,"sandbox":null,"tab_types":null,"unwrap":null,"user_modified":1728617496869,"run_in":null,"tags":[]},"storage":{"ts":1728617358626,"data":{}},"enabled":true,"position":12,"uuid":"492f773b-2fa7-4e99-ad80-1f6af213deef","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBNRkwgTG9nbwovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly90YW1wZXJtb25rZXkubmV0LwovLyBAdmVyc2lvbiAgICAgIDIwMjQtMTAtMTEKLy8gQGRlc2NyaXB0aW9uICB0cnkgdG8gdGFrZSBvdmVyIHRoZSB3b3JsZCEKLy8gQGF1dGhvciAgICAgICBZb3UKLy8gQG1hdGNoICAgICAgICBodHRwczovL3d3dzQ5Lm15ZmFudGFzeWxlYWd1ZS5jb20vKgovLyBAaWNvbiAgICAgICAgIGh0dHBzOi8vd3d3Lmdvb2dsZS5jb20vczIvZmF2aWNvbnM/c3o9NjQmZG9tYWluPW15ZmFudGFzeWxlYWd1ZS5jb20KLy8gQGdyYW50ICAgICAgICBub25lCi8vID09L1VzZXJTY3JpcHQ9PQoKKGZ1bmN0aW9uKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgibGVhZ3VlbG9nbyIpWzBdLnJlbW92ZSgpOwp9KSgpOw=="}]}